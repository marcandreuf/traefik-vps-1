name: ${APP}-prod-env

secrets:
  cloudflare-token:
    file: "./traefik/secrets/cloudflare-token.secret"
  cloudflare-email:
    file: "./traefik/secrets/cloudflare-email.secret"

# TODO. Implement a new project to manage the traefik configuration of the VPS as a separate project.
# Test locally that I can manage differnt docker files to up and down web apps and traefik 
services:
  reverse-proxy:
    image: traefik:latest
    container_name: ${APP}-prod-reverse-proxy-container
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
    secrets:
      - "cloudflare-token"
      - "cloudflare-email"
    environment:
      TRAEFIK_DASHBOARD_CREDENTIALS: ${TRAEFIK_DASHBOARD_CREDENTIALS}
      CF_DNS_API_TOKEN_FILE: /run/secrets/cloudflare-token
      CF_API_EMAIL_FILE: /run/secrets/cloudflare-email
    env_file: .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/acme.json:/acme.json
      - ./traefik/config.yml:/config.yml:ro
      - ./traefik/logs:/var/log/traefik
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 3s
      retries: 1
      start_period: 10s
    command:
      - --ping=true
    labels:
      - traefik.enable=true
      # Middlewares
      - traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_DASHBOARD_CREDENTIALS}
      - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https

      # Router traefik secure
      # - traefik.http.routers.tf_dashboard.entrypoints=https
      # - traefik.http.routers.tf_dashboard.rule=Host(`tf-dashboard.itqualab.com`)
      - traefik.http.routers.tf_dashboard.middlewares=traefik-auth
      - traefik.http.routers.tf_dashboard.service=api@internal
      # - traefik.http.routers.tf_dashboard.middlewares=internal_ips

  web:
    image: ghcr.io/marcandreuf/base-images/frontend-node22-pnpm:main
    container_name: ${APP}-prod-web-container
    restart: unless-stopped
    user: node
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.rule=Host(`itqualab.com`) || Host(`www.itqualab.com`)
      - traefik.http.routers.web.entrypoints=http
      - traefik.http.routers.web.middlewares=redirect-to-https
      - traefik.http.routers.webs.rule=Host(`itqualab.com`) || Host(`www.itqualab.com`)
      - traefik.http.routers.webs.entrypoints=https
      - traefik.http.routers.webs.tls=true
      - traefik.http.routers.webs.tls.certresolver=cloudflare
      - traefik.http.routers.webs.middlewares=redirect-to-non-www
      - traefik.http.services.web.loadbalancer.server.port=${WEB_PORT}
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true
      - traefik.http.middlewares.redirect-to-non-www.redirectregex.regex=^https?://www.itqualab.com/(.*)
      - traefik.http.middlewares.redirect-to-non-www.redirectregex.replacement=https://itqualab.com/$${1}
      - traefik.http.middlewares.redirect-to-non-www.redirectregex.permanent=true
    volumes:
      - ../dist:/home/node/workspace/dist
      - ../.auth:/home/node/workspace/.auth
      - ../astro.config.js:/home/node/workspace/astro.config.js
      - ../pnpm-lock.yaml:/home/node/workspace/pnpm-lock.yaml
      - ../package.json:/home/node/workspace/package.json
      - ../package-lock.json:/home/node/workspace/package-lock.json
    env_file:
      - ../.env
    command: /bin/bash -c "npm install && node ./dist/server/entry.mjs"
    depends_on:
      reverse-proxy:
        condition: service_healthy
 

networks:
  proxy:
    name: proxy
    external: true
